{"remainingRequest":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/babel-loader/lib/index.js!/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/src/components/QueryView.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/src/components/QueryView.vue","mtime":1638102484272},{"path":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/babel.config.js","mtime":1637896006000},{"path":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638090762101},{"path":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/babel-loader/lib/index.js","mtime":1638090762809},{"path":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638090762101},{"path":"/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1638090762770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9ray9EZXNrdG9wL2RiL2V4cDMvQnJvd3NlcitTZXJ2ZXIgQXJjaC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IEVsQnV0dG9uLCBFbElucHV0LCBFbFRhYmxlLCBFbFRhYmxlQ29sdW1uLCBFbEZvcm0sIEVsRm9ybUl0ZW0sIEVsTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtcGx1cyc7IC8vIGNvbWJpbmUgMiBhcnJheXMgb2Ygc3RyaW5ncyBhcyBhIGpzb24gb2JqZWN0CgpmdW5jdGlvbiBjb21iaW5lSlNPTihjb2xzLCByb3cpIHsKICB2YXIganNvbnN0ciA9ICd7JzsKICB2YXIgaSA9IDA7CiAgdmFyIHN6ID0gY29scy5sZW5ndGg7CgogIGZvciAoOyBpIDwgc3o7ICsraSkgewogICAgaWYgKGkgIT0gMCkganNvbnN0ciArPSAnICwgJzsKICAgIGpzb25zdHIgKz0gJyInICsgY29sc1tpXSArICciOiInICsgcm93W2ldICsgJyInOwogIH0KCiAganNvbnN0ciArPSAnfSc7CiAgcmV0dXJuIEpTT04ucGFyc2UoanNvbnN0cik7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBFbEJ1dHRvbjogRWxCdXR0b24sCiAgICBFbElucHV0OiBFbElucHV0LAogICAgRWxUYWJsZTogRWxUYWJsZSwKICAgIEVsVGFibGVDb2x1bW46IEVsVGFibGVDb2x1bW4sCiAgICBFbEZvcm06IEVsRm9ybSwKICAgIEVsRm9ybUl0ZW06IEVsRm9ybUl0ZW0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBTUUxTdGF0ZW1lbnQ6ICcnLAogICAgICByb3dzOiBbXSwKICAgICAgY29sczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBleGVjdXRlOiBmdW5jdGlvbiBleGVjdXRlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuU1FMU3RhdGVtZW50LnRyaW0oKS5sZW5ndGggPT0gMCkgewogICAgICAgIEVsTWVzc2FnZS5lcnJvcignU1FM6K+t5Y+l5LiN6IO95Li656m6Jyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYXhpb3MuZ2V0KCcvYXBpL3NxbCcsIHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBzcWw6IHRoaXMuU1FMU3RhdGVtZW50CiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIEVsTWVzc2FnZS5zdWNjZXNzKCfmk43kvZzmiJDlip8nKTsgLy8gUHJvY2VzcyBkYXRhLCBtYWtlIGl0IGFjY2V0YWJsZSBmb3IgZWxlbWVudC1wbHVzCiAgICAgICAgICAvLyBBdm9pZCBpbmNvbnNpc3RlbnQgZGF0YSB3aXRoIGEgdGVtcG9yYXJ5IHZhcmlhYmxlCgogICAgICAgICAgdmFyIF90YWJsZSA9IHsKICAgICAgICAgICAgY29sczogW10sCiAgICAgICAgICAgIHJvd3M6IFtdCiAgICAgICAgICB9OyAvLyBHZW5lcmF0ZSBjb2x1bW4gZGF0YQoKICAgICAgICAgIF90YWJsZS5jb2xzID0gcmVzcG9uc2UuZGF0YS5jb2x1bW5JbmZvcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZTsKICAgICAgICAgIH0pOyAvLyBHZW5lcmF0ZSByb3dzCiAgICAgICAgICAvLyAnb2YnIG5vdCAnaW4nLCB0aGUgbGF0dGVyIHVzZXMgaW5kZXhlcwoKICAgICAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihyZXNwb25zZS5kYXRhLnJvd3MpLAogICAgICAgICAgICAgIF9zdGVwOwoKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgdmFyIHJvdyA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgICAgICBfdGFibGUucm93cy5wdXNoKGNvbWJpbmVKU09OKF90YWJsZS5jb2xzLCByb3cpKTsKICAgICAgICAgICAgfSAvLyBBcHBseSBjaGFuZ2VzCgogICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLnJvd3MgPSBfdGFibGUucm93czsKICAgICAgICAgIF90aGlzLmNvbHMgPSBfdGFibGUuY29sczsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IoJ+aTjeS9nOWksei0pe+8micgKyBlcnIucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICBjb25zb2xlLmxvZygn6ZSZ6K+v57uG6IqC77yaXG4nICsgZXJyICsgJ1xuJyArIGVyci5yZXNwb25zZS5kYXRhKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/kk/Desktop/db/exp3/Browser+Server Arch/frontend/src/components/QueryView.vue"],"names":[],"mappings":";;;;AA4BA,SAAS,QAAT,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,aAArC,EAAoD,MAApD,EAA4D,UAA5D,EAAwE,SAAxE,QAAyF,cAAzF,C,CAEA;;AACA,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAAgC;AAC9B,MAAI,OAAM,GAAI,GAAd;AACA,MAAI,CAAA,GAAI,CAAR;AACA,MAAM,EAAC,GAAI,IAAI,CAAC,MAAhB;;AACA,SAAO,CAAA,GAAI,EAAX,EAAe,EAAE,CAAjB,EAAoB;AAClB,QAAI,CAAA,IAAK,CAAT,EAAY,OAAM,IAAK,KAAX;AACZ,IAAA,OAAM,IAAK,MAAM,IAAI,CAAC,CAAD,CAAV,GAAgB,KAAhB,GAAwB,GAAG,CAAC,CAAD,CAA3B,GAAiC,GAA5C;AACF;;AACA,EAAA,OAAM,IAAK,GAAX;AACA,SAAO,IAAI,CAAC,KAAL,CAAW,OAAX,CAAP;AACF;;AAEA,eAAe;AACb,EAAA,UAAU,EAAE;AACV,IAAA,QAAQ,EAAR,QADU;AACA,IAAA,OAAO,EAAP,OADA;AACS,IAAA,OAAO,EAAP,OADT;AACkB,IAAA,aAAa,EAAb,aADlB;AACiC,IAAA,MAAM,EAAN,MADjC;AACyC,IAAA,UAAS,EAAT;AADzC,GADC;AAIb,EAAA,IAJa,kBAIN;AACL,WAAO;AACL,MAAA,YAAY,EAAE,EADT;AAEL,MAAA,IAAI,EAAE,EAFD;AAGL,MAAA,IAAI,EAAE;AAHD,KAAP;AAKD,GAVY;AAWb,EAAA,OAAO,EAAE;AACP,IAAA,OADO,qBACG;AAAA;;AACR,UAAI,KAAK,YAAL,CAAkB,IAAlB,GAAyB,MAAzB,IAAmC,CAAvC,EAA0C;AACxC,QAAA,SAAS,CAAC,KAAV,CAAgB,WAAhB;AACA;AACF,OAHA,MAGO;AACL,aAAK,KAAL,CAAW,GAAX,CAAe,UAAf,EAA2B;AACzB,UAAA,MAAM,EAAE;AACN,YAAA,GAAG,EAAE,KAAK;AADJ;AADiB,SAA3B,EAIG,IAJH,CAIQ,UAAC,QAAD,EAAc;AACpB,UAAA,SAAS,CAAC,OAAV,CAAkB,MAAlB,EADoB,CAEpB;AACA;;AACA,cAAI,MAAK,GAAI;AACX,YAAA,IAAI,EAAE,EADK;AAEX,YAAA,IAAI,EAAE;AAFK,WAAb,CAJoB,CAQpB;;AACA,UAAA,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B,CAA8B,UAAC,IAAD,EAAU;AACpD,mBAAO,IAAI,CAAC,IAAZ;AACD,WAFa,CAAd,CAToB,CAYpB;AACA;;AAboB,qDAcL,QAAQ,CAAC,IAAT,CAAc,IAdT;AAAA;;AAAA;AAcpB,gEAAmC;AAAA,kBAA3B,GAA2B;;AACjC,cAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,WAAW,CAAC,MAAM,CAAC,IAAR,EAAc,GAAd,CAA5B;AACF,aAhBoB,CAiBpB;;AAjBoB;AAAA;AAAA;AAAA;AAAA;;AAkBpB,UAAA,KAAI,CAAC,IAAL,GAAY,MAAM,CAAC,IAAnB;AACA,UAAA,KAAI,CAAC,IAAL,GAAY,MAAM,CAAC,IAAnB;AACD,SAxBD,EAwBG,KAxBH,CAwBS,UAAC,GAAD,EAAS;AAChB,UAAA,SAAS,CAAC,KAAV,CAAgB,UAAU,GAAG,CAAC,QAAJ,CAAa,IAAvC;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,YAAY,GAAZ,GAAkB,IAAlB,GAAyB,GAAG,CAAC,QAAJ,CAAa,IAAlD;AACD,SA3BD;AA4BF;AACF;AAnCO;AAXI,CAAf","sourcesContent":["<template>\n  <el-table :data='rows' style='margin:20px'>\n    <el-table-column v-for='col in cols'\n      :key='col'\n      :prop='col'\n      :label='col'\n    />\n  </el-table>\n\n  <!-- Default behavior of native enter event is refresh. We'd to prevent it -->\n  <!-- DAMN WHICH F**CKING IDIOT DESIGNED THIS STUPID BEHAVIOR?! -->\n  <el-form style='margin:0px 20px 20px 20px'>\n    <el-form-item label='SQL语句'>\n      <el-input v-model='SQLStatement'\n        placeholder='在此输入SQL语句，按下Ctrl+Enter执行'\n        type='textarea'\n        resize='none'\n        :autosize='{ minRows:4, maxRows: 128 }'\n        @keydown.enter.ctrl='execute'\n      />\n    </el-form-item>\n    <el-form-item>\n      <el-button @click='execute'>执行</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { ElButton, ElInput, ElTable, ElTableColumn, ElForm, ElFormItem, ElMessage } from 'element-plus'\n\n// combine 2 arrays of strings as a json object\nfunction combineJSON(cols, row) {\n  var jsonstr = '{';\n  var i = 0;\n  const sz = cols.length\n  for (; i < sz; ++i) {\n    if (i != 0) jsonstr += ' , '\n    jsonstr += '\"' + cols[i] + '\":\"' + row[i] + '\"'\n  }\n  jsonstr += '}'\n  return JSON.parse(jsonstr)\n}\n\nexport default {\n  components: {\n    ElButton, ElInput, ElTable, ElTableColumn, ElForm, ElFormItem\n  },\n  data() {\n    return {\n      SQLStatement: '',\n      rows: [],\n      cols: [],\n    }\n  },\n  methods: {\n    execute() {\n      if (this.SQLStatement.trim().length == 0) {\n        ElMessage.error('SQL语句不能为空')\n        return\n      } else {\n        this.axios.get('/api/sql', {\n          params: {\n            sql: this.SQLStatement\n          }\n        }).then((response) => {\n          ElMessage.success('操作成功')\n          // Process data, make it accetable for element-plus\n          // Avoid inconsistent data with a temporary variable\n          var _table = {\n            cols: [],\n            rows: []\n          }\n          // Generate column data\n          _table.cols = response.data.columnInfos.map((item) => {\n            return item.name\n          })\n          // Generate rows\n          // 'of' not 'in', the latter uses indexes\n          for(var row of response.data.rows) {\n            _table.rows.push(combineJSON(_table.cols, row))\n          }\n          // Apply changes\n          this.rows = _table.rows\n          this.cols = _table.cols\n        }).catch((err) => {\n          ElMessage.error('操作失败：' + err.response.data)\n          console.log('错误细节：\\n' + err + '\\n' + err.response.data)\n        })\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}]}