{"version":3,"file":"tab-nav.mjs","sources":["../../../../../../packages/components/tabs/src/tab-nav.ts"],"sourcesContent":["import {\n  h,\n  defineComponent,\n  ref,\n  inject,\n  computed,\n  onUpdated,\n  onMounted,\n  watch,\n} from 'vue'\nimport { NOOP, capitalize } from '@vue/shared'\nimport {\n  useResizeObserver,\n  useDocumentVisibility,\n  useWindowFocus,\n} from '@vueuse/core'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils/props'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { throwError } from '@element-plus/utils/error'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight, Close } from '@element-plus/icons'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport TabBar from './tab-bar.vue'\nimport type { ExtractPropTypes, CSSProperties } from 'vue'\nimport type { TabsPaneContext } from '@element-plus/tokens'\nexport interface Scrollable {\n  next?: boolean\n  prev?: number\n}\n\nexport const tabNavProps = buildProps({\n  panes: {\n    type: definePropType<TabsPaneContext[]>(Array),\n    default: () => mutable([] as const),\n  },\n  currentName: {\n    type: String,\n    default: '',\n  },\n  editable: Boolean,\n  onTabClick: {\n    type: definePropType<\n      (tab: TabsPaneContext, tabName: string, ev: Event) => void\n    >(Function),\n    default: NOOP,\n  },\n  onTabRemove: {\n    type: definePropType<(tab: TabsPaneContext, ev: Event) => void>(Function),\n    default: NOOP,\n  },\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  stretch: Boolean,\n} as const)\n\nexport type TabNavProps = ExtractPropTypes<typeof tabNavProps>\n\nconst COMPONENT_NAME = 'ElTabNav'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: tabNavProps,\n\n  setup(props, { expose }) {\n    const visibility = useDocumentVisibility()\n    const focused = useWindowFocus()\n\n    const rootTabs = inject(tabsRootContextKey)\n    if (!rootTabs)\n      throwError(COMPONENT_NAME, `ElTabNav must be nested inside ElTabs`)\n\n    const scrollable = ref<false | Scrollable>(false)\n    const navOffset = ref(0)\n    const isFocus = ref(false)\n    const focusable = ref(true)\n\n    const navScroll$ = ref<HTMLDivElement>()\n    const nav$ = ref<HTMLDivElement>()\n    const el$ = ref<HTMLDivElement>()\n\n    const sizeName = computed(() =>\n      ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n        ? 'width'\n        : 'height'\n    )\n    const navStyle = computed<CSSProperties>(() => {\n      const dir = sizeName.value === 'width' ? 'X' : 'Y'\n      return {\n        transform: `translate${dir}(-${navOffset.value}px)`,\n      }\n    })\n\n    const scrollPrev = () => {\n      if (!navScroll$.value) return\n\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (!currentOffset) return\n\n      const newOffset =\n        currentOffset > containerSize ? currentOffset - containerSize : 0\n\n      navOffset.value = newOffset\n    }\n\n    const scrollNext = () => {\n      if (!navScroll$.value || !nav$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (navSize - currentOffset <= containerSize) return\n\n      const newOffset =\n        navSize - currentOffset > containerSize * 2\n          ? currentOffset + containerSize\n          : navSize - containerSize\n\n      navOffset.value = newOffset\n    }\n\n    const scrollToActiveTab = () => {\n      const nav = nav$.value\n      if (!scrollable.value || !el$.value || !navScroll$.value || !nav) return\n\n      const activeTab = el$.value.querySelector('.is-active')\n      if (!activeTab) return\n\n      const navScroll = navScroll$.value\n      const isHorizontal = ['top', 'bottom'].includes(\n        rootTabs.props.tabPosition\n      )\n      const activeTabBounding = activeTab.getBoundingClientRect()\n      const navScrollBounding = navScroll.getBoundingClientRect()\n      const maxOffset = isHorizontal\n        ? nav.offsetWidth - navScrollBounding.width\n        : nav.offsetHeight - navScrollBounding.height\n      const currentOffset = navOffset.value\n      let newOffset = currentOffset\n\n      if (isHorizontal) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset =\n            currentOffset - (navScrollBounding.left - activeTabBounding.left)\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset =\n            currentOffset + activeTabBounding.right - navScrollBounding.right\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset =\n            currentOffset - (navScrollBounding.top - activeTabBounding.top)\n        }\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset =\n            currentOffset +\n            (activeTabBounding.bottom - navScrollBounding.bottom)\n        }\n      }\n      newOffset = Math.max(newOffset, 0)\n      navOffset.value = Math.min(newOffset, maxOffset)\n    }\n\n    const update = () => {\n      if (!nav$.value || !navScroll$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (containerSize < navSize) {\n        const currentOffset = navOffset.value\n        scrollable.value = scrollable.value || {}\n        scrollable.value.prev = currentOffset\n        scrollable.value.next = currentOffset + containerSize < navSize\n        if (navSize - currentOffset < containerSize) {\n          navOffset.value = navSize - containerSize\n        }\n      } else {\n        scrollable.value = false\n        if (currentOffset > 0) {\n          navOffset.value = 0\n        }\n      }\n    }\n\n    const changeTab = (e: KeyboardEvent) => {\n      const code = e.code\n\n      const { up, down, left, right } = EVENT_CODE\n      if (![up, down, left, right].includes(code)) return\n\n      // 左右上下键更换tab\n      const tabList = Array.from(\n        (e.currentTarget as HTMLDivElement).querySelectorAll<HTMLDivElement>(\n          '[role=tab]'\n        )\n      )\n      const currentIndex = tabList.indexOf(e.target as HTMLDivElement)\n\n      let nextIndex: number\n      if (code === left || code === up) {\n        // left\n        if (currentIndex === 0) {\n          // first\n          nextIndex = tabList.length - 1\n        } else {\n          nextIndex = currentIndex - 1\n        }\n      } else {\n        // right\n        if (currentIndex < tabList.length - 1) {\n          // not last\n          nextIndex = currentIndex + 1\n        } else {\n          nextIndex = 0\n        }\n      }\n      tabList[nextIndex].focus() // 改变焦点元素\n      tabList[nextIndex].click() // 选中下一个tab\n      setFocus()\n    }\n\n    const setFocus = () => {\n      if (focusable.value) isFocus.value = true\n    }\n    const removeFocus = () => (isFocus.value = false)\n\n    watch(visibility, (visibility) => {\n      if (visibility === 'hidden') {\n        focusable.value = false\n      } else if (visibility === 'visible') {\n        setTimeout(() => (focusable.value = true), 50)\n      }\n    })\n    watch(focused, (focused) => {\n      if (focused) {\n        setTimeout(() => (focusable.value = true), 50)\n      } else {\n        focusable.value = false\n      }\n    })\n\n    useResizeObserver(el$, update)\n\n    onMounted(() => setTimeout(() => scrollToActiveTab(), 0))\n    onUpdated(() => update())\n\n    expose({\n      scrollToActiveTab,\n      removeFocus,\n    })\n\n    return () => {\n      const scrollBtn = scrollable.value\n        ? [\n            h(\n              'span',\n              {\n                class: [\n                  'el-tabs__nav-prev',\n                  scrollable.value.prev ? '' : 'is-disabled',\n                ],\n                onClick: scrollPrev,\n              },\n              [h(ElIcon, {}, { default: () => h(ArrowLeft) })]\n            ),\n            h(\n              'span',\n              {\n                class: [\n                  'el-tabs__nav-next',\n                  scrollable.value.next ? '' : 'is-disabled',\n                ],\n                onClick: scrollNext,\n              },\n              [h(ElIcon, {}, { default: () => h(ArrowRight) })]\n            ),\n          ]\n        : null\n\n      const tabs = props.panes.map((pane, index) => {\n        const tabName = pane.props.name || pane.index || `${index}`\n        const closable = pane.isClosable || props.editable\n        pane.index = `${index}`\n\n        const btnClose = closable\n          ? h(\n              ElIcon,\n              {\n                class: 'is-icon-close',\n                onClick: (ev: MouseEvent) => props.onTabRemove(pane, ev),\n              },\n              { default: () => h(Close) }\n            )\n          : null\n\n        const tabLabelContent =\n          pane.instance.slots.label?.() || pane.props.label\n        const tabindex = pane.active ? 0 : -1\n\n        return h(\n          'div',\n          {\n            class: {\n              'el-tabs__item': true,\n              [`is-${rootTabs.props.tabPosition}`]: true,\n              'is-active': pane.active,\n              'is-disabled': pane.props.disabled,\n              'is-closable': closable,\n              'is-focus': isFocus,\n            },\n            id: `tab-${tabName}`,\n            key: `tab-${tabName}`,\n            'aria-controls': `pane-${tabName}`,\n            role: 'tab',\n            'aria-selected': pane.active,\n            ref: `tab-${tabName}`,\n            tabindex,\n            onFocus: () => setFocus(),\n            onBlur: () => removeFocus(),\n            onClick: (ev: MouseEvent) => {\n              removeFocus()\n              props.onTabClick(pane, tabName, ev)\n            },\n            onKeydown: (ev: KeyboardEvent) => {\n              if (\n                closable &&\n                (ev.code === EVENT_CODE.delete ||\n                  ev.code === EVENT_CODE.backspace)\n              ) {\n                props.onTabRemove(pane, ev)\n              }\n            },\n          },\n          [tabLabelContent, btnClose]\n        )\n      })\n\n      return h(\n        'div',\n        {\n          ref: el$,\n          class: [\n            'el-tabs__nav-wrap',\n            scrollable.value ? 'is-scrollable' : '',\n            `is-${rootTabs.props.tabPosition}`,\n          ],\n        },\n        [\n          scrollBtn,\n          h(\n            'div',\n            {\n              class: 'el-tabs__nav-scroll',\n              ref: navScroll$,\n            },\n            [\n              h(\n                'div',\n                {\n                  class: [\n                    'el-tabs__nav',\n                    `is-${rootTabs.props.tabPosition}`,\n                    props.stretch &&\n                    ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n                      ? 'is-stretch'\n                      : '',\n                  ],\n                  ref: nav$,\n                  style: navStyle.value,\n                  role: 'tablist',\n                  onKeydown: changeTab,\n                },\n                [\n                  !props.type\n                    ? h(TabBar, {\n                        tabs: [...props.panes],\n                      })\n                    : null,\n                  tabs,\n                ]\n              ),\n            ]\n          ),\n        ]\n      )\n    }\n  },\n})\n"],"names":["TabBar"],"mappings":"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"}