{"version":3,"file":"tabs.js","sources":["../../../../../../packages/components/tabs/src/tabs.ts"],"sourcesContent":["import {\n  defineComponent,\n  Fragment,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  onUpdated,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport { isPromise, NOOP } from '@vue/shared'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons'\nimport { buildProps, definePropType } from '@element-plus/utils/props'\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport TabNav from './tab-nav'\nimport type { TabsPaneContext } from '@element-plus/tokens'\n\nimport type {\n  Component,\n  ComponentInternalInstance,\n  VNode,\n  ExtractPropTypes,\n  Ref,\n} from 'vue'\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  activeName: {\n    type: String,\n    default: '',\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: String,\n    default: '',\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (\n        newTabName: string,\n        oldTabName: string\n      ) => void | boolean | Promise<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (tabName: string) => typeof tabName === 'string',\n  [INPUT_EVENT]: (tabName: string) => typeof tabName === 'string',\n  'tab-click': (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  edit: (paneName: string | null, action: 'remove' | 'add') =>\n    action === 'remove' || action === 'add',\n  'tab-remove': (paneName: string) => typeof paneName === 'string',\n  'tab-add': () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nconst getPaneInstanceFromSlot = (\n  vnode: VNode,\n  paneInstanceList: ComponentInternalInstance[] = []\n) => {\n  const children = (vnode.children || []) as ArrayLike<VNode>\n  Array.from(children).forEach((node) => {\n    let type = node.type\n    type = (type as Component).name || type\n    if (type === 'ElTabPane' && node.component) {\n      paneInstanceList.push(node.component)\n    } else if (type === Fragment || type === 'template') {\n      getPaneInstanceFromSlot(node, paneInstanceList)\n    }\n  })\n  return paneInstanceList\n}\n\nexport default defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const instance = getCurrentInstance()!\n    const nav$ = ref<InstanceType<typeof TabNav>>()\n\n    const panes: Ref<TabsPaneContext[]> = ref([])\n    const currentName = ref(props.modelValue || props.activeName || '0')\n\n    const paneStatesMap: Record<number, TabsPaneContext> = {}\n\n    const updatePaneInstances = (isForceUpdate = false) => {\n      if (slots.default) {\n        const children = instance.subTree.children as ArrayLike<VNode>\n        const content = Array.from(children).find(\n          ({ props }) => props?.class === 'el-tabs__content'\n        )\n        if (!content) return\n\n        const paneInstanceList: TabsPaneContext[] = getPaneInstanceFromSlot(\n          content\n        ).map((paneComponent) => paneStatesMap[paneComponent.uid])\n\n        const panesChanged = !(\n          paneInstanceList.length === panes.value.length &&\n          paneInstanceList.every(\n            (pane, index) => pane.uid === panes.value[index].uid\n          )\n        )\n\n        if (isForceUpdate || panesChanged) {\n          panes.value = paneInstanceList\n        }\n      } else if (panes.value.length !== 0) {\n        panes.value = []\n      }\n    }\n\n    const changeCurrentName = (value: string) => {\n      currentName.value = value\n      emit(INPUT_EVENT, value)\n      emit(UPDATE_MODEL_EVENT, value)\n    }\n\n    const setCurrentName = (value: string) => {\n      // should do nothing.\n      if (currentName.value === value) return\n\n      const canLeave = props.beforeLeave?.(value, currentName.value)\n      if (isPromise(canLeave)) {\n        canLeave.then(\n          () => {\n            changeCurrentName(value)\n\n            // call exposed function, Vue doesn't support expose in typescript yet.\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            nav$.value?.removeFocus?.()\n          },\n          // ignore promise rejection in `before-leave` hook\n          NOOP\n        )\n      } else if (canLeave !== false) {\n        changeCurrentName(value)\n      }\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: string,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName)\n      emit('tab-click', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tab-remove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', null, 'add')\n      emit('tab-add')\n    }\n\n    onUpdated(() => updatePaneInstances())\n    onMounted(() => updatePaneInstances())\n\n    watch(\n      () => props.activeName,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      updatePaneInstances(true)\n      await nextTick()\n      await nav$.value?.$nextTick()\n\n      // call exposed function, Vue doesn't support expose in typescript yet.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      updatePaneState: (pane) => (paneStatesMap[pane.uid] = pane),\n    })\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const newButton =\n        props.editable || props.addable\n          ? h(\n              'span',\n              {\n                class: 'el-tabs__new-tab',\n                tabindex: '0',\n                onClick: handleTabAdd,\n                onKeydown: (ev: KeyboardEvent) => {\n                  if (ev.code === EVENT_CODE.enter) handleTabAdd()\n                },\n              },\n              [h(ElIcon, { class: 'is-icon-plus' }, { default: () => h(Plus) })]\n            )\n          : null\n\n      const header = h(\n        'div',\n        { class: ['el-tabs__header', `is-${props.tabPosition}`] },\n        [\n          newButton,\n          h(TabNav, {\n            currentName: currentName.value,\n            editable: props.editable,\n            type: props.type,\n            panes: panes.value,\n            stretch: props.stretch,\n            ref: nav$,\n            onTabClick: handleTabClick,\n            onTabRemove: handleTabRemove,\n          }),\n        ]\n      )\n\n      const panels = h('div', { class: 'el-tabs__content' }, [\n        renderSlot(slots, 'default'),\n      ])\n\n      return h(\n        'div',\n        {\n          class: {\n            'el-tabs': true,\n            'el-tabs--card': props.type === 'card',\n            [`el-tabs--${props.tabPosition}`]: true,\n            'el-tabs--border-card': props.type === 'border-card',\n          },\n        },\n        props.tabPosition !== 'bottom' ? [header, panels] : [panels, header]\n      )\n    }\n  },\n})\n"],"names":["buildProps","definePropType","UPDATE_MODEL_EVENT","INPUT_EVENT","Fragment","defineComponent","getCurrentInstance","ref","isPromise","NOOP","nextTick","tabsRootContextKey","h","EVENT_CODE","ElIcon","Plus","TabNav","renderSlot"],"mappings":"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"}