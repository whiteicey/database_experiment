{"version":3,"file":"skeleton.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/skeleton/src/skeleton.vue"],"sourcesContent":["<template>\n  <template v-if=\"uiLoading\">\n    <div\n      :class=\"['el-skeleton', animated ? 'is-animated' : '']\"\n      v-bind=\"$attrs\"\n    >\n      <template v-for=\"i in count\" :key=\"i\">\n        <slot v-if=\"loading\" :key=\"i\" name=\"template\">\n          <el-skeleton-item class=\"is-first\" variant=\"p\" />\n          <el-skeleton-item\n            v-for=\"item in rows\"\n            :key=\"item\"\n            :class=\"{\n              'el-skeleton__paragraph': true,\n              'is-last': item === rows && rows > 1,\n            }\"\n            variant=\"p\"\n          />\n        </slot>\n      </template>\n    </div>\n  </template>\n  <template v-else>\n    <slot v-bind=\"$attrs\"></slot>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useThrottleRender } from '@element-plus/hooks'\nimport SkeletonItem from './skeleton-item.vue'\nimport { skeletonProps } from './skeleton'\n\nexport default defineComponent({\n  name: 'ElSkeleton',\n  components: {\n    [SkeletonItem.name]: SkeletonItem,\n  },\n  props: skeletonProps,\n  setup(props) {\n    const innerLoading = computed(() => {\n      return props.loading\n    })\n\n    const uiLoading = useThrottleRender(innerLoading, props.throttle)\n\n    return {\n      uiLoading,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","SkeletonItem","skeletonProps","computed","useThrottleRender"],"mappings":";;;;;;;;;;;AAiCA,aAAeA,oBAAgB;AAAA,EAC7B,MAAM;AAAA,EACN,YAAY;AAAA,KACTC,iDAAa,OAAOA;AAAA;AAAA,EAEvB,OAAOC;AAAA,EACP,MAAM,OAAO;AACX,UAAM,eAAeC,aAAS,MAAM;AAClC,aAAO,MAAM;AAAA;AAGf,UAAM,YAAYC,iBAAkB,cAAc,MAAM;AAExD,WAAO;AAAA,MACL;AAAA;AAAA;AAAA;;;;"}